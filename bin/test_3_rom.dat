@00

101_11000   // LDA (101)
0000_0001   // Load F2(00000000)

110_11000   // STO (110)
0000_0010   // Update TEMP(00000000)

010_11000   // ADD (010)
0000_0000   // Calculate F1(00000001) + F2(00000000)

110_11000   // STO (110)
0000_0001   // Update F2(00000001)

101_11000   // LDA (101)
0000_0010   // Load TEMP(00000000)

110_11000   // STO (110)
0000_0000   // Update F1(00000000) 

100_11000   // XOR (100)
0000_0011   // Compare accumulator(00000000) with LIMIT (10010000, 'd144)

001_00000   // SKZ (001)
0000_0000   // ALU output is now 10010000, won't skip

111_00000   // JMP (111)
0000_0000   // Jump to ROM address 0 (loop)

000_00000   // HLT (000)
0000_0000